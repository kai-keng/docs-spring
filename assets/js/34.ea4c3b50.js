(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{457:function(t,a,s){"use strict";s.r(a);var e=s(42),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"编程规约"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编程规约"}},[t._v("#")]),t._v(" 编程规约")]),t._v(" "),s("h2",{attrs:{id:"命名风格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名风格"}},[t._v("#")]),t._v(" 命名风格")]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("【强制】代码中的命名均不能以下划线或美元符号开始，也不能以下划线或美元符号结束。")])])]),t._v(" "),s("p",[t._v("反例：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("_name / __name / $name / name_ / name$ / name__\\\n")])])]),s("blockquote",[s("ol",{attrs:{start:"2"}},[s("li",[t._v("【强制】所有编程相关的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。")])])]),t._v(" "),s("p",[t._v("说明：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("正确的英文拼写和语法可以让阅读者易于理解，避免歧义。注意，纯拼音命名方式更要避免采用。\n")])])]),s("p",[t._v("正例：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("ali / alibaba / taobao / cainiao/ aliyun/ youku / hangzhou 等国际通用的名称，可视同英文。\n")])])]),s("p",[t._v("反例：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("DaZhePromotion [打折] / getPingfenByName() [评分] / String fw[福娃] / int 某变量 = 3\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("【强制】代码和注释中都要避免使用任何语言的种族歧视性词语。")])]),t._v(" "),s("p",[t._v("正例：日本人 / 印度人 / blockList / allowList / secondary")]),t._v(" "),s("p",[t._v("反例：RIBENGUIZI / Asan / blackList / whiteList / slave")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("【强制】类名使用 UpperCamelCase 风格，但以下情形例外：DO / BO / DTO / VO / AO / PO / UID 等。")])]),t._v(" "),s("p",[t._v("正例：ForceCode / UserDO / HtmlDTO / XmlService / TcpUdpDeal / TaPromotion")]),t._v(" "),s("p",[t._v("反例：forcecode / UserDo / HTMLDto / XMLService / TCPUDPDeal / TAPromotion")]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[t._v("【强制】方法名、参数名、成员变量、局部变量都统一使用 lowerCamelCase 风格。")])]),t._v(" "),s("p",[t._v("正例： localValue / getHttpMessage() / inputUserId")]),t._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[t._v("【强制】常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。")])]),t._v(" "),s("p",[t._v("正例：MAX_STOCK_COUNT / CACHE_EXPIRED_TIME")]),t._v(" "),s("p",[t._v("反例：MAX_COUNT / EXPIRED_TIME")]),t._v(" "),s("ol",{attrs:{start:"7"}},[s("li",[s("p",[t._v("【强制】抽象类命名使用 Abstract 或 Base 开头；异常类命名使用 Exception 结尾；测试类命名以它要测试的类的名称开始，以 Test 结尾。")])]),t._v(" "),s("li",[s("p",[t._v("【强制】类型与中括号紧挨相连来表示数组。")])])]),t._v(" "),s("p",[t._v("正例：定义整形数组 int[] arrayDemo。")]),t._v(" "),s("p",[t._v("反例：在 main 参数中，使用 String args[]来定义。")]),t._v(" "),s("ol",{attrs:{start:"9"}},[s("li",[t._v("【强制】POJO 类中的任何布尔类型的变量，都不要加 is 前缀，否则部分框架解析会引起序列化错误。")])]),t._v(" "),s("p",[t._v("说明：在本文 MySQL 规约中的建表约定第一条，表达是与否的变量采用 is_xxx 的命名方式，所以，需要在 "),s("code",[t._v("<resultMap>")]),t._v(" 设置从 is_xxx 到 xxx 的映射关系。")]),t._v(" "),s("p",[t._v("反例：定义为基本数据类型 Boolean isDeleted 的属性，它的方法也是 isDeleted()，框架在反向解析的时候，“误以为”对应的属性名称是 deleted，导致属性获取不到，进而抛出异常。")]),t._v(" "),s("ol",{attrs:{start:"10"}},[s("li",[t._v("【强制】包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用单数形式，但是类名如果有复数含义，类名可以使用复数形式。")])]),t._v(" "),s("p",[t._v("正例：应用工具类包名为 com.alibaba.ei.kunlun.aap.util、类名为 MessageUtils（此规则参考 spring 的框架结构）")]),t._v(" "),s("ol",{attrs:{start:"11"}},[s("li",[t._v("【强制】避免在子父类的成员变量之间、或者不同代码块的局部变量之间采用完全相同的命名，\n使可理解性降低。")])]),t._v(" "),s("p",[t._v("说明：子类、父类成员变量名相同，即使是 public 类型的变量也能够通过编译，另外，局部变量在同一方法内的不同代码块中同名也是合法的，这些情况都要避免。对于非 setter/getter 的参数名称也要避免与成员变量名称相同。")]),t._v(" "),s("p",[t._v("反例：")]),t._v(" "),s("div",{staticClass:"language-JAVA extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfusingName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" stock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非 setter/getter 的参数名称，不允许与本类成员变量同名")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" alibaba"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" money "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("666")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在同一方法体中，不允许与其它代码块中的 money 命名相同")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" money "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15978")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Son")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ConfusingName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不允许与父类的成员变量名称相同")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" stock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"12"}},[s("li",[t._v("【强制】杜绝完全不规范的缩写，避免望文不知义。")])]),t._v(" "),s("p",[t._v("反例：AbstractClass“缩写”成 AbsClass；condition“缩写”成 condi；Function 缩写”成 Fu，此类随意缩写严重降低了代码的可阅读性。")]),t._v(" "),s("ol",{attrs:{start:"13"}},[s("li",[t._v("【推荐】为了达到代码自解释的目标，任何自定义编程元素在命名时，使用尽量完整的单词组合来表达。")])]),t._v(" "),s("p",[t._v("正例：对某个对象引用的 volatile 字段进行原子更新的类名为 AtomicReferenceFieldUpdater。")]),t._v(" "),s("p",[t._v("反例：常见的方法内变量为 int a;的定义方式。")]),t._v(" "),s("ol",{attrs:{start:"14"}},[s("li",[t._v("【推荐】在常量与变量的命名时，表示类型的名词放在词尾，以提升辨识度。")])]),t._v(" "),s("p",[t._v("正例：startTime / workQueue / nameList / TERMINATED_THREAD_COUNT")]),t._v(" "),s("p",[t._v("反例：startedAt / QueueOfWork / listName / COUNT_TERMINATED_THREAD")]),t._v(" "),s("ol",{attrs:{start:"15"}},[s("li",[t._v("【推荐】如果模块、接口、类、方法使用了设计模式，在命名时需体现出具体模式。")])]),t._v(" "),s("p",[t._v("说明：将设计模式体现在名字中，有利于阅读者快速理解架构设计理念。")]),t._v(" "),s("p",[t._v("正例：")]),t._v(" "),s("div",{staticClass:"language-JAVA extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LoginProxy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ResourceObserver")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",{attrs:{start:"16"}},[s("li",[t._v("【推荐】接口类中的方法和属性不要加任何修饰符号（public 也不要加），保持代码的简洁性，并加上有效的 Javadoc 注释。尽量不要在接口里定义变量，如果一定要定义变量，确定与接口方法相关，并且是整个应用的基础常量。")])]),t._v(" "),s("p",[t._v("正例：")]),t._v(" "),s("p",[t._v("接口方法签名 "),s("code",[t._v("void commit();")]),t._v("\n接口基础常量 "),s("code",[t._v('String COMPANY = "alibaba";')])]),t._v(" "),s("p",[t._v("反例：接口方法定义 "),s("code",[t._v("public abstract void f();")])]),t._v(" "),s("p",[t._v("说明：JDK8 中接口允许有默认实现，那么这个 "),s("code",[t._v("default")]),t._v(" 方法，是对所有实现类都有价值的默认实现。")]),t._v(" "),s("ol",{attrs:{start:"17"}},[s("li",[t._v("接口和实现类的命名有两套规则：")])]),t._v(" "),s("p",[t._v("1）【强制】对于 Service 和 DAO 类，基于 SOA 的理念，暴露出来的服务一定是接口，内部的实现类用Impl 的后缀与接口区别。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("正例：CacheServiceImpl 实现 CacheService 接口。\n")])])]),s("p",[t._v("2）【推荐】如果是形容能力的接口名称，取对应的形容词为接口名（通常是–able 的形容词）。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("正例：AbstractTranslator 实现 Translatable 接口。\n")])])]),s("ol",{attrs:{start:"18"}},[s("li",[t._v("【参考】枚举类名带上 Enum 后缀，枚举成员名称需要全大写，单词间用下划线隔开。")])]),t._v(" "),s("p",[t._v("说明：枚举其实就是特殊的常量类，且构造方法被默认强制是私有。")]),t._v(" "),s("p",[t._v("正例：枚举名字为 ProcessStatusEnum 的成员名称：SUCCESS / UNKNOWN_REASON。")]),t._v(" "),s("ol",{attrs:{start:"19"}},[s("li",[t._v("【参考】各层命名规约：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Service/DAO 层方法命名规约")]),t._v(" "),s("ul",[s("li",[t._v("获取单个对象的方法用 get 做前缀。")]),t._v(" "),s("li",[t._v("获取多个对象的方法用 list 做前缀，复数结尾，如：listObjects。")]),t._v(" "),s("li",[t._v("获取统计值的方法用 count 做前缀。")]),t._v(" "),s("li",[t._v("插入的方法用 save/insert 做前缀。")]),t._v(" "),s("li",[t._v("删除的方法用 remove/delete 做前缀。")]),t._v(" "),s("li",[t._v("修改的方法用 update 做前缀。")])])]),t._v(" "),s("li",[s("p",[t._v("领域模型命名规约")]),t._v(" "),s("ul",[s("li",[t._v("数据对象：xxxDO，xxx 即为数据表名。")]),t._v(" "),s("li",[t._v("数据传输对象：xxxDTO，xxx 为业务领域相关的名称。")]),t._v(" "),s("li",[t._v("展示对象：xxxVO，xxx 一般为网页名称。")]),t._v(" "),s("li",[t._v("POJO 是 DO/DTO/BO/VO 的统称，禁止命名成 xxxPOJO。")])])])]),t._v(" "),s("h3",{attrs:{id:"测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[t._v("#")]),t._v(" 测试")])])}),[],!1,null,null,null);a.default=n.exports}}]);